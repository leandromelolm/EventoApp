# Dados de conexao com o banco H2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=

# Configuracao do cliente web do banco H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Configuracao para mostrar o SQL no console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# Iniciar o data.sql
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

server.port = 8081

#Corrige o erro @Autowired JavaMailSender
#spring.mail.host: 127.0.0.1

# No JDBC URL: jdbc:h2:file:~/test

# http://localhost:8080/h2-console/


# COMANDOS SQL

# mysql --version
# mysql -u admin -p
# CREATE DATABASE eventosapp;
# SHOW DATABASES;
# USE eventosapp;
# SHOW TABLES;
# SHOW COLUMNS FROM evento; 
# DESCRIBE evento;
# SELECT * FROM evento;
# SHOW VARIABLES LIKE 'port';

# DROP TABLE telefone;
# DROP DATABASE eventosapp;

# SELECT * FROM participante WHERE data_nascimento IS NOT NULL AND email IS NOT NULL AND nome_participante IS NOT NULL;

# DELETE FROM participante WHERE cpf = '';
# DELETE FROM participante WHERE email LIKE 'test%';   ## Deleta linha que tem email que inicia com 'test';
# DELETE FROM participante WHERE data_nascimento IS NULL;  ## Deleta linha que tem data_nascimento igual a NULL;

# UPDATE participante SET evento_codigo=NULL WHERE evento_codigo=80;
# UPDATE participante SET evento_codigo=NULL WHERE evento_codigo=80;
# UPDATE participante SET evento_codigo=81 WHERE id_participante=89;

# EXIT


